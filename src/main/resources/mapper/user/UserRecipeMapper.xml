<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks46team03.user.mapper.UserRecipeMapper">
        <resultMap id="recipeResultMap" type="Recipe">
        <id     column="recipe_code"            property="recipeCode"/>
        <result column="recipe_name"            property="recipeName"/>
        <result column="recipe_category_code"   property="recipeCategoryCode"/>
        <result column="member_id"              property="memberId"/>
        <result column="recipe_cal"             property="recipeCal"/>
        <result column="recipe_quantity"        property="recipeQuantity"/>
        <result column="reg_date"               property="regDate"/>
        <result column="update_at"              property="updateAt"/>
        <result column="file_idx"               property="fileIdx"/>
        <result column="view_count"             property="viewCount"/>
        <result column="recommendation_count"   property="recommendationCount"/>
        <result column="recipe_use_number"      property="recipeUseNumber"/>
        <result column="recipe_step1"            property="recipeStep1"/>
        <result column="recipe_step2"            property="recipeStep2"/>
        <result column="recipe_step3"            property="recipeStep3"/>

<!--        <collection property="sellerList" ofType="Goods">-->
<!--            <id     column="g_code" property="goodsCode"/>-->
<!--            <result column="g_name" property="goodsName"/>-->
<!--            <result column="g_price" property="goodsPrice"/>-->
<!--            <result column="g_seller_id" property="goodsSellerId"/>-->
<!--            <result column="g_reg_date" property="goodsRegDate"/>-->
<!--        </collection>-->
    </resultMap>

<!--    <select id="getRecipeList" parameterType="String" resultType="Recipe">-->
<!--        /* 상품목록조회 */-->
<!--        SELECT-->
<!--        r.recipe_code              as recipeCode-->
<!--        ,r.recipe_name              as recipeName-->
<!--        ,r.recipe_category_code     as recipeCategoryCode-->
<!--        ,r.member_id                as memberId-->
<!--        ,r.recipe_cal               as recipeCal-->
<!--        ,r.recipe_quantity          as recipeQuantity-->
<!--        ,r.reg_date                 as regDate-->
<!--        FROM-->
<!--        recipe_reg as r-->
<!--        INNER JOIN-->
<!--        member as m-->
<!--        ON r.member_id = m.member_id-->
<!--        <where>-->
<!--            <if test="searchKey != null and searchKey != ''">-->
<!--                ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')-->
<!--            </if>-->
<!--        </where>-->
<!--        ORDER BY r.recipe_code;-->
<!--    </select>-->

<!--    <delete id="removeRecipeById" parameterType="String">-->
<!--        /* 레시피 삭제 */-->
<!--        DELETE-->
<!--        FROM-->
<!--        recipe_reg-->
<!--        WHERE-->
<!--        recipe_code = #{recipeCode};-->
<!--    </delete>-->
<!--    <delete id="removeRecipeListById" parameterType="String">-->
<!--        /*  레시피 이력 삭제 */-->
<!--        DELETE-->
<!--        FROM-->
<!--        recipe_reg-->
<!--        WHERE-->
<!--        recipe_code = #{recipeCode};-->
<!--    </delete>-->

    <delete id="removeRecipeById" parameterType="String">
        <!-- 레시피 삭제 -->
        DELETE FROM recipe_reg
        WHERE recipe_code = #{recipeCode}
    </delete>

    <delete id="removeRecipeListById" parameterType="String">
        <!-- 레시피 이력 삭제 -->
        DELETE FROM recipe_ingredient
        WHERE recipe_code = #{recipeCode};
    </delete>



    <update id="modifyRecipe" parameterType="Recipe">
        /* 레시피 수정 */
        UPDATE recipe_reg
        <trim prefix="SET" suffixOverrides=",">
            <if test="recipeName != null and recipeName != ''">
                recipe_name = #{recipeName},
            </if>
            <if test="recipeCategoryCode != null and recipeCategoryCode != ''">
                recipe_category_code = #{recipeCategoryCode},
            </if>
            <if test="memberId != null and memberId != ''">
                member_id = #{memberId},
            </if>
            <if test="recipeStep1 != null and recipeStep1 != ''">
                recipe_step1 = #{recipeStep1},
            </if>
            <if test="recipeStep2 != null and recipeStep2 != ''">
                recipe_step2 = #{recipeStep2},
            </if>
            <if test="recipeStep3 != null and recipeStep3 != ''">
                recipe_step3 = #{recipeStep3},
            </if>
            <if test="recipeCal != null and recipeCal != ''">
                recipe_cal = #{recipeCal},
            </if>
            <if test="fileIdx != null and fileIdx != ''">
                file_idx = #{fileIdx},
            </if>
            update_at = NOW(),

        </trim>
        WHERE
            recipe_code = #{recipeCode};
    </update>


    <select id="getRecipeInfoByCode" parameterType="String" resultMap="recipeResultMap">
        /* 특정 레시피 조회 */
        SELECT
             r.recipe_code
            ,r.recipe_name
            ,r.recipe_cal
            ,r.recipe_quantity
            ,r.file_idx
            ,r.recipe_step1
            ,r.recipe_step2
            ,r.recipe_step3
            ,IFNULL(r.update_at, r.reg_date) AS reg_date
        FROM
            recipe_reg AS r
        WHERE
            r.recipe_code = #{recipeCode}
    </select>







    <select id="isPosterByRecipeCode" parameterType="String" resultType="boolean">
        /* 문의 게시자 아이디 조회 */
        SELECT
            IF(COUNT(1)=0, 0, 1)
        FROM
            member AS m
            INNER JOIN
            recipe_code AS r
            ON m.member_id = r.member_id
        WHERE
            m.member_id = #{memberId}
            AND
            r.recipe_code = #{recipeCode};
    </select>

    <insert id="addRecipe" parameterType="Recipe">
        <selectKey keyProperty="recipeCode" resultType="string" order="BEFORE">
            SELECT sf_new_recipe_code() AS recipeCode;
        </selectKey>
        /* 레시피등록 */
        INSERT INTO recipe_reg
        (recipe_code, recipe_name, recipe_category_code, member_id, recipe_cal, recipe_quantity, file_idx, reg_date, recipe_step1, recipe_step2, recipe_step3)
        VALUES
        (#{recipeCode}, #{recipeName}, #{recipeCategoryCode}, #{memberId}, #{recipeCal}, #{recipeQuantity}, #{fileIdx}, SYSDATE(), #{recipeStep1} ,#{recipeStep2} ,#{recipeStep3});
    </insert>

    <insert id="addRecipeIngredient" parameterType="List">
        /* 레시피 재료등록 */
        INSERT INTO recipe_ingredient
        (recipe_number, recipe_code, ingredient_code, quantity, gram, member_id, reg_time)
        VALUES
        <foreach collection="recipeIngredientList" item="item" separator=",">
            (sf_new_recipe_number(), #{item.recipeCode}, #{item.ingredientCode}, #{item.quantity}, #{item.gram}, #{item.memberId}, now())
        </foreach>

    </insert>



    <select id="getRecipeList" parameterType="String" resultType="Recipe">
        /* 레시피목록조회 */
        SELECT distinct
        r.recipe_code              as recipeCode
        ,r.recipe_name              as recipeName
        ,r.recipe_category_code     as recipeCategoryCode
        ,r.member_id                as memberId
        ,r.recipe_cal               as recipeCal
        ,r.recipe_quantity          as recipeQuantity
        ,r.reg_date                 as regDate
        ,r.recipe_step1              as recipeStep1
        ,r.recipe_step2              as recipeStep2
        ,r.recipe_step3              as recipeStep3
        ,ir.ingredient_category_code as ingredientCategoryCode
        FROM
        recipe_reg as r
        INNER JOIN
        member as m
        ON r.member_id = m.member_id
        INNER JOIN
        recipe_ingredient as ri
        ON r.recipe_code = ri.recipe_code
        INNER JOIN
        ingredient_registration as ir
        ON ri.ingredient_code = ir.ingredient_code
        <where>
            <if test="searchKey != null and searchKey != ''">
                ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
            </if>
        </where>
        GROUP BY r.recipe_code
        ORDER BY r.recipe_code;
    </select>

</mapper>